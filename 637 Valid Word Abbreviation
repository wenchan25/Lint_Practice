/* 2 pointers, kind of like fast-slow, but not exactly the same */

public class Solution {
    /**
     * @param word: a non-empty string
     * @param abbr: an abbreviation
     * @return: true if string matches with the given abbr or false
     */
    public boolean validWordAbbreviation(String word, String abbr) {
        // write your code here
        if (word == null || abbr == null) return false;
        
        char[] s = word.toCharArray();
        char[] t = abbr.toCharArray();
        
        int i = 0, j = 0; // index of two char arrays;
        
        while (i < s.length && j < t.length) {
            
            if (Character.isDigit(t[j])) {
                if (t[j] == '0') return false; // cannot be zero;
                int val = 0; // initialize the number of digits, i.e., 41 means 40 + 1;
                while (j < t.length && Character.isDigit(t[j])) {
                    val = 10 * val + t[j] - '0'; // convert char to int;
                    j++;
                }
                i += val; // move cursor this many steps;
            } else {
                // when abbr is not digit
                if (s[i] != t[j]) return false;
                i++;
                j++;
            }
        }
        
        // at the end of loop, s, t will be greater than length;
        return i == s.length && j == t.length;
    }
}
