/* Simple one-pass Map */
class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> map = new HashMap<>();
        
        for (int i = 0; i < nums.length; i++) {
            int curr = nums[i];
            int diff = target - curr;
            if (!map.containsKey(diff)) map.put(curr, i);
            else return new int[]{map.get(diff), i};
        }
        return new int[2];
    }
}

/*================================================*/

// The first one is brute force solution
// simply use double loops

public class Solution {
    public int[] twoSum(int[] nums, int target) {
        for (int i = 0; i < nums.length; i ++) {
           for (int j = i + 1; j < nums.length; j++) {
               if (nums[j] == (target - nums[i])) {
                   return new int[] {i+1, j+1};
               }
           } 
        }
        throw new IllegalArgumentException("No two sum solution");
    }
}
