/* 类似于meeting room，Lambda表达式来排序 */

/**
 * Definition of Interval:
 * public classs Interval {
 *     int start, end;
 *     Interval(int start, int end) {
 *         this.start = start;
 *         this.end = end;
 *     }
 * }
 */

public class Solution {
    /**
     * @param intervals: interval list.
     * @return: A new interval list.
     */
    public List<Interval> merge(List<Interval> intervals) {
        // write your code here
        List<Interval> ans = new ArrayList<>();
        
        intervals.sort(Comparator.comparing(i -> i.start));
        
        Interval prev = null;
        for (Interval curr : intervals) {
            if (prev == null || prev.end < curr.start) {
                ans.add(curr);
                prev = curr;
            } else {
                // extend previous one; not current one;
                prev.end = Math.max(prev.end, curr.end);
            }
        }
        return ans;
    }
}
